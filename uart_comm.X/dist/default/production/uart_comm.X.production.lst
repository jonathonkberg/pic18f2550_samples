

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 01 23:36:59 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _RCREG	set	4014
    51  0000                     _TXREG	set	4013
    52  0000                     _SPBRG	set	4015
    53  0000                     _SPBRGH	set	4016
    54  0000                     _LATB7	set	31831
    55  0000                     _LATB6	set	31830
    56  0000                     _LATB5	set	31829
    57  0000                     _LATB4	set	31828
    58  0000                     _TRISB7	set	31903
    59  0000                     _TRISB6	set	31902
    60  0000                     _TRISB5	set	31901
    61  0000                     _TRISB4	set	31900
    62  0000                     _RCIF	set	31989
    63  0000                     _CREN	set	32092
    64  0000                     _GIE	set	32663
    65  0000                     _PEIE	set	32662
    66  0000                     _RCIE	set	31981
    67  0000                     _RX9	set	32094
    68  0000                     _TRMT	set	32097
    69  0000                     _TXEN	set	32101
    70  0000                     _TX9	set	32102
    71  0000                     _TRISC7	set	31911
    72  0000                     _TRISC6	set	31910
    73  0000                     _SPEN	set	32095
    74  0000                     _SYNC	set	32100
    75  0000                     _BRG16	set	32195
    76  0000                     _BRGH	set	32098
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81  007F4E                     __pcinit:
    82                           	callstack 0
    83  007F4E                     start_initialization:
    84                           	callstack 0
    85  007F4E                     __initialization:
    86                           	callstack 0
    87  007F4E                     end_of_initialization:
    88                           	callstack 0
    89  007F4E                     __end_of__initialization:
    90                           	callstack 0
    91  007F4E  0100               	movlb	0
    92  007F50  EFC2  F03F         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	cstackCOMRAM
    95  000001                     __pcstackCOMRAM:
    96                           	callstack 0
    97  000001                     ??_blink:
    98  000001                     uart_send@data:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	2
   103  000003                     ??_main:
   104                           
   105                           ; 1 bytes @ 0x2
   106  000003                     	ds	2
   107  000005                     main@send_message:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x4
   111  000005                     	ds	1
   112                           
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 16 in file "main.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;  send_message    1    4[COMRAM] unsigned char 
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, status,0, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   132 ;;      Params:         0       0       0       0       0       0       0       0       0
   133 ;;      Locals:         1       0       0       0       0       0       0       0       0
   134 ;;      Temps:          2       0       0       0       0       0       0       0       0
   135 ;;      Totals:         3       0       0       0       0       0       0       0       0
   136 ;;Total ram usage:        3 bytes
   137 ;; Hardware stack levels required when called: 1
   138 ;; This function calls:
   139 ;;		_blink
   140 ;;		_uart_init
   141 ;;		_uart_send
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  007F84                     __ptext0:
   149                           	callstack 0
   150  007F84                     _main:
   151                           	callstack 30
   152  007F84                     
   153                           ;main.c: 18:     uint8_t send_message = 0;
   154  007F84  0E00               	movlw	0
   155  007F86  6E05               	movwf	main@send_message^0,c
   156  007F88                     
   157                           ;main.c: 19:     TRISB4 = 0;
   158  007F88  9893               	bcf	3987,4,c	;volatile
   159  007F8A                     
   160                           ;main.c: 20:     TRISB5 = 1;
   161  007F8A  8A93               	bsf	3987,5,c	;volatile
   162  007F8C                     
   163                           ;main.c: 21:     TRISB6 = 1;
   164  007F8C  8C93               	bsf	3987,6,c	;volatile
   165  007F8E                     
   166                           ;main.c: 22:     TRISB7 = 1;
   167  007F8E  8E93               	bsf	3987,7,c	;volatile
   168  007F90                     
   169                           ;main.c: 24:     uart_init();
   170  007F90  ECB5  F03F         	call	_uart_init	;wreg free
   171  007F94                     l852:
   172                           
   173                           ;main.c: 28:     {;main.c: 29:         blink();
   174  007F94  ECDF  F03F         	call	_blink	;wreg free
   175                           
   176                           ;main.c: 30:         _delay((unsigned long)((3000)*(48000000/4000.0)));
   177  007F98  0EB7               	movlw	183
   178  007F9A  6E04               	movwf	(??_main+1)^0,c
   179  007F9C  0EA1               	movlw	161
   180  007F9E  6E03               	movwf	??_main^0,c
   181  007FA0  0EC4               	movlw	196
   182  007FA2                     u47:
   183  007FA2  2EE8               	decfsz	wreg,f,c
   184  007FA4  D7FE               	bra	u47
   185  007FA6  2E03               	decfsz	??_main^0,f,c
   186  007FA8  D7FC               	bra	u47
   187  007FAA  2E04               	decfsz	(??_main+1)^0,f,c
   188  007FAC  D7FA               	bra	u47
   189  007FAE                     
   190                           ;main.c: 31:         uart_send(send_message);
   191  007FAE  5005               	movf	main@send_message^0,w,c
   192  007FB0  ECAA  F03F         	call	_uart_send
   193  007FB4                     
   194                           ;main.c: 32:         send_message++;
   195  007FB4  2A05               	incf	main@send_message^0,f,c
   196  007FB6  EFCA  F03F         	goto	l852
   197  007FBA  EF00  F000         	goto	start
   198  007FBE                     __end_of_main:
   199                           	callstack 0
   200                           
   201 ;; *************** function _uart_send *****************
   202 ;; Defined at:
   203 ;;		line 26 in file "./uart_tools.h"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  data            1    wreg     unsigned char 
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  data            1    0[COMRAM] unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         1       0       0       0       0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0       0       0
   220 ;;      Totals:         1       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        1 bytes
   222 ;; Hardware stack levels used: 1
   223 ;; This function calls:
   224 ;;		Nothing
   225 ;; This function is called by:
   226 ;;		_main
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text1
   231  007F54                     __ptext1:
   232                           	callstack 0
   233  007F54                     _uart_send:
   234                           	callstack 30
   235                           
   236                           ;incstack = 0
   237                           ;uart_send@data stored from wreg
   238  007F54  6E01               	movwf	uart_send@data^0,c
   239  007F56                     l64:
   240  007F56  A2AC               	btfss	4012,1,c	;volatile
   241  007F58  EFB0  F03F         	goto	u11
   242  007F5C  EFB2  F03F         	goto	u10
   243  007F60                     u11:
   244  007F60  EFAB  F03F         	goto	l64
   245  007F64                     u10:
   246  007F64                     
   247                           ;./uart_tools.h: 29:     TXREG = data;
   248  007F64  C001  FFAD         	movff	uart_send@data,4013	;volatile
   249  007F68  0012               	return		;funcret
   250  007F6A                     __end_of_uart_send:
   251                           	callstack 0
   252                           
   253 ;; *************** function _uart_init *****************
   254 ;; Defined at:
   255 ;;		line 12 in file "./uart_tools.h"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         0       0       0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text2
   283  007F6A                     __ptext2:
   284                           	callstack 0
   285  007F6A                     _uart_init:
   286                           	callstack 30
   287  007F6A                     
   288                           ;./uart_tools.h: 14:     BRGH = 1;
   289  007F6A  84AC               	bsf	4012,2,c	;volatile
   290                           
   291                           ;./uart_tools.h: 15:     BRG16 = 0;
   292  007F6C  96B8               	bcf	4024,3,c	;volatile
   293  007F6E                     
   294                           ;./uart_tools.h: 16:     SPBRGH = 0X01;
   295  007F6E  0E01               	movlw	1
   296  007F70  6EB0               	movwf	176,c	;volatile
   297                           
   298                           ;./uart_tools.h: 17:     SPBRG = 0X38;
   299  007F72  0E38               	movlw	56
   300  007F74  6EAF               	movwf	175,c	;volatile
   301  007F76                     
   302                           ;./uart_tools.h: 18:     SYNC = 0;
   303  007F76  98AC               	bcf	4012,4,c	;volatile
   304  007F78                     
   305                           ;./uart_tools.h: 19:     SPEN = 1;
   306  007F78  8EAB               	bsf	4011,7,c	;volatile
   307  007F7A                     
   308                           ;./uart_tools.h: 20:     TRISC6 = 1;
   309  007F7A  8C94               	bsf	3988,6,c	;volatile
   310  007F7C                     
   311                           ;./uart_tools.h: 21:     TRISC7 = 1;
   312  007F7C  8E94               	bsf	3988,7,c	;volatile
   313  007F7E                     
   314                           ;./uart_tools.h: 22:     TX9 = 0;
   315  007F7E  9CAC               	bcf	4012,6,c	;volatile
   316  007F80                     
   317                           ;./uart_tools.h: 23:     TXEN = 1;
   318  007F80  8AAC               	bsf	4012,5,c	;volatile
   319  007F82  0012               	return		;funcret
   320  007F84                     __end_of_uart_init:
   321                           	callstack 0
   322                           
   323 ;; *************** function _blink *****************
   324 ;; Defined at:
   325 ;;		line 40 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   339 ;;      Params:         0       0       0       0       0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0       0       0       0
   341 ;;      Temps:          2       0       0       0       0       0       0       0       0
   342 ;;      Totals:         2       0       0       0       0       0       0       0       0
   343 ;;Total ram usage:        2 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text3
   353  007FBE                     __ptext3:
   354                           	callstack 0
   355  007FBE                     _blink:
   356                           	callstack 30
   357  007FBE                     
   358                           ;main.c: 43:         LATB4 = 1;
   359  007FBE  888A               	bsf	3978,4,c	;volatile
   360                           
   361                           ;main.c: 44:         LATB5 = 1;
   362  007FC0  8A8A               	bsf	3978,5,c	;volatile
   363                           
   364                           ;main.c: 45:         LATB6 = 1;
   365  007FC2  8C8A               	bsf	3978,6,c	;volatile
   366                           
   367                           ;main.c: 46:         LATB7 = 1;
   368  007FC4  8E8A               	bsf	3978,7,c	;volatile
   369  007FC6                     
   370                           ;main.c: 47:         _delay((unsigned long)((500)*(48000000/4000.0)));
   371  007FC6  0E1F               	movlw	31
   372  007FC8  6E02               	movwf	(??_blink+1)^0,c
   373  007FCA  0E71               	movlw	113
   374  007FCC  6E01               	movwf	??_blink^0,c
   375  007FCE  0E1E               	movlw	30
   376  007FD0                     u57:
   377  007FD0  2EE8               	decfsz	wreg,f,c
   378  007FD2  D7FE               	bra	u57
   379  007FD4  2E01               	decfsz	??_blink^0,f,c
   380  007FD6  D7FC               	bra	u57
   381  007FD8  2E02               	decfsz	(??_blink+1)^0,f,c
   382  007FDA  D7FA               	bra	u57
   383  007FDC  D000               	nop2	
   384  007FDE                     
   385                           ;main.c: 48:         LATB4 = 0;
   386  007FDE  988A               	bcf	3978,4,c	;volatile
   387  007FE0                     
   388                           ;main.c: 49:         LATB5 = 0;
   389  007FE0  9A8A               	bcf	3978,5,c	;volatile
   390  007FE2                     
   391                           ;main.c: 50:         LATB6 = 0;
   392  007FE2  9C8A               	bcf	3978,6,c	;volatile
   393  007FE4                     
   394                           ;main.c: 51:         LATB7 = 0;
   395  007FE4  9E8A               	bcf	3978,7,c	;volatile
   396                           
   397                           ;main.c: 52:         _delay((unsigned long)((500)*(48000000/4000.0)));
   398  007FE6  0E1F               	movlw	31
   399  007FE8  6E02               	movwf	(??_blink+1)^0,c
   400  007FEA  0E71               	movlw	113
   401  007FEC  6E01               	movwf	??_blink^0,c
   402  007FEE  0E1E               	movlw	30
   403  007FF0                     u67:
   404  007FF0  2EE8               	decfsz	wreg,f,c
   405  007FF2  D7FE               	bra	u67
   406  007FF4  2E01               	decfsz	??_blink^0,f,c
   407  007FF6  D7FC               	bra	u67
   408  007FF8  2E02               	decfsz	(??_blink+1)^0,f,c
   409  007FFA  D7FA               	bra	u67
   410  007FFC  D000               	nop2	
   411  007FFE  0012               	return		;funcret
   412  008000                     __end_of_blink:
   413                           	callstack 0
   414  0000                     
   415                           	psect	rparam
   416  0000                     
   417                           	psect	idloc
   418                           
   419                           ;Config register IDLOC0 @ 0x200000
   420                           ;	unspecified, using default values
   421  200000                     	org	2097152
   422  200000  FF                 	db	255
   423                           
   424                           ;Config register IDLOC1 @ 0x200001
   425                           ;	unspecified, using default values
   426  200001                     	org	2097153
   427  200001  FF                 	db	255
   428                           
   429                           ;Config register IDLOC2 @ 0x200002
   430                           ;	unspecified, using default values
   431  200002                     	org	2097154
   432  200002  FF                 	db	255
   433                           
   434                           ;Config register IDLOC3 @ 0x200003
   435                           ;	unspecified, using default values
   436  200003                     	org	2097155
   437  200003  FF                 	db	255
   438                           
   439                           ;Config register IDLOC4 @ 0x200004
   440                           ;	unspecified, using default values
   441  200004                     	org	2097156
   442  200004  FF                 	db	255
   443                           
   444                           ;Config register IDLOC5 @ 0x200005
   445                           ;	unspecified, using default values
   446  200005                     	org	2097157
   447  200005  FF                 	db	255
   448                           
   449                           ;Config register IDLOC6 @ 0x200006
   450                           ;	unspecified, using default values
   451  200006                     	org	2097158
   452  200006  FF                 	db	255
   453                           
   454                           ;Config register IDLOC7 @ 0x200007
   455                           ;	unspecified, using default values
   456  200007                     	org	2097159
   457  200007  FF                 	db	255
   458                           
   459                           	psect	config
   460                           
   461                           ;Config register CONFIG1L @ 0x300000
   462                           ;	PLL Prescaler Selection bits
   463                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
   464                           ;	System Clock Postscaler Selection bits
   465                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   466                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   467                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   468  300000                     	org	3145728
   469  300000  23                 	db	35
   470                           
   471                           ;Config register CONFIG1H @ 0x300001
   472                           ;	Oscillator Selection bits
   473                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   474                           ;	Fail-Safe Clock Monitor Enable bit
   475                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   476                           ;	Internal/External Oscillator Switchover bit
   477                           ;	IESO = OFF, Oscillator Switchover mode disabled
   478  300001                     	org	3145729
   479  300001  0E                 	db	14
   480                           
   481                           ;Config register CONFIG2L @ 0x300002
   482                           ;	Power-up Timer Enable bit
   483                           ;	PWRT = ON, PWRT enabled
   484                           ;	Brown-out Reset Enable bits
   485                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   486                           ;	Brown-out Reset Voltage bits
   487                           ;	BORV = 3, Minimum setting 2.05V
   488                           ;	USB Voltage Regulator Enable bit
   489                           ;	VREGEN = OFF, USB voltage regulator disabled
   490  300002                     	org	3145730
   491  300002  18                 	db	24
   492                           
   493                           ;Config register CONFIG2H @ 0x300003
   494                           ;	Watchdog Timer Enable bit
   495                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   496                           ;	Watchdog Timer Postscale Select bits
   497                           ;	WDTPS = 32768, 1:32768
   498  300003                     	org	3145731
   499  300003  1E                 	db	30
   500                           
   501                           ; Padding undefined space
   502  300004                     	org	3145732
   503  300004  FF                 	db	255
   504                           
   505                           ;Config register CONFIG3H @ 0x300005
   506                           ;	CCP2 MUX bit
   507                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   508                           ;	PORTB A/D Enable bit
   509                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   510                           ;	Low-Power Timer 1 Oscillator Enable bit
   511                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   512                           ;	MCLR Pin Enable bit
   513                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   514  300005                     	org	3145733
   515  300005  01                 	db	1
   516                           
   517                           ;Config register CONFIG4L @ 0x300006
   518                           ;	Stack Full/Underflow Reset Enable bit
   519                           ;	STVREN = ON, Stack full/underflow will cause Reset
   520                           ;	Single-Supply ICSP Enable bit
   521                           ;	LVP = OFF, Single-Supply ICSP disabled
   522                           ;	Extended Instruction Set Enable bit
   523                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   524                           ;	Background Debugger Enable bit
   525                           ;	DEBUG = 0x1, unprogrammed default
   526  300006                     	org	3145734
   527  300006  81                 	db	129
   528                           
   529                           ; Padding undefined space
   530  300007                     	org	3145735
   531  300007  FF                 	db	255
   532                           
   533                           ;Config register CONFIG5L @ 0x300008
   534                           ;	Code Protection bit
   535                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   536                           ;	Code Protection bit
   537                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   538                           ;	Code Protection bit
   539                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   540                           ;	Code Protection bit
   541                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   542  300008                     	org	3145736
   543  300008  0F                 	db	15
   544                           
   545                           ;Config register CONFIG5H @ 0x300009
   546                           ;	Boot Block Code Protection bit
   547                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   548                           ;	Data EEPROM Code Protection bit
   549                           ;	CPD = OFF, Data EEPROM is not code-protected
   550  300009                     	org	3145737
   551  300009  C0                 	db	192
   552                           
   553                           ;Config register CONFIG6L @ 0x30000A
   554                           ;	Write Protection bit
   555                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   556                           ;	Write Protection bit
   557                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   558                           ;	Write Protection bit
   559                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   560                           ;	Write Protection bit
   561                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   562  30000A                     	org	3145738
   563  30000A  0F                 	db	15
   564                           
   565                           ;Config register CONFIG6H @ 0x30000B
   566                           ;	Configuration Register Write Protection bit
   567                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   568                           ;	Boot Block Write Protection bit
   569                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   570                           ;	Data EEPROM Write Protection bit
   571                           ;	WRTD = OFF, Data EEPROM is not write-protected
   572  30000B                     	org	3145739
   573  30000B  E0                 	db	224
   574                           
   575                           ;Config register CONFIG7L @ 0x30000C
   576                           ;	Table Read Protection bit
   577                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   578                           ;	Table Read Protection bit
   579                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   580                           ;	Table Read Protection bit
   581                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   582                           ;	Table Read Protection bit
   583                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   584  30000C                     	org	3145740
   585  30000C  0F                 	db	15
   586                           
   587                           ;Config register CONFIG7H @ 0x30000D
   588                           ;	Boot Block Table Read Protection bit
   589                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   590  30000D                     	org	3145741
   591  30000D  40                 	db	64
   592                           tosu	equ	0xFFF
   593                           tosh	equ	0xFFE
   594                           tosl	equ	0xFFD
   595                           stkptr	equ	0xFFC
   596                           pclatu	equ	0xFFB
   597                           pclath	equ	0xFFA
   598                           pcl	equ	0xFF9
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           prodh	equ	0xFF4
   604                           prodl	equ	0xFF3
   605                           indf0	equ	0xFEF
   606                           postinc0	equ	0xFEE
   607                           postdec0	equ	0xFED
   608                           preinc0	equ	0xFEC
   609                           plusw0	equ	0xFEB
   610                           fsr0h	equ	0xFEA
   611                           fsr0l	equ	0xFE9
   612                           wreg	equ	0xFE8
   613                           indf1	equ	0xFE7
   614                           postinc1	equ	0xFE6
   615                           postdec1	equ	0xFE5
   616                           preinc1	equ	0xFE4
   617                           plusw1	equ	0xFE3
   618                           fsr1h	equ	0xFE2
   619                           fsr1l	equ	0xFE1
   620                           bsr	equ	0xFE0
   621                           indf2	equ	0xFDF
   622                           postinc2	equ	0xFDE
   623                           postdec2	equ	0xFDD
   624                           preinc2	equ	0xFDC
   625                           plusw2	equ	0xFDB
   626                           fsr2h	equ	0xFDA
   627                           fsr2l	equ	0xFD9
   628                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_blink

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              2 COMRAM     3     3      0
                              _blink
                          _uart_init
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
   _uart_init
   _uart_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 01 23:36:59 2022

                     l61 7F82                       l64 7F56                       l67 7F68  
                     l96 7FFE                       u10 7F64                       u11 7F60  
                     u47 7FA2                       u57 7FD0                       u67 7FF0  
                    l800 7FC6                      l802 7FDE                      l804 7FE0  
                    l806 7FE2                      l808 7FE4                      l840 7F84  
                    l850 7F90                      l842 7F88                      l780 7F7A  
                    l772 7F6A                      l852 7F94                      l844 7F8A  
                    l782 7F7C                      l774 7F6E                      l790 7F64  
                    l854 7FAE                      l846 7F8C                      l784 7F7E  
                    l776 7F76                      l856 7FB4                      l848 7F8E  
                    l786 7F80                      l778 7F78                      l788 7F56  
                    l798 7FBE                      _GIE 007F97                      _RX9 007D5E  
                    _TX9 007D66                      wreg 000FE8                     _BRGH 007D62  
                   _CREN 007D5C                     _PEIE 007F96                     _RCIE 007CED  
                   _RCIF 007CF5                     _SPEN 007D5F                     _TRMT 007D61  
                   _TXEN 007D65                     _SYNC 007D64                     _main 7F84  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  _BRG16 007DC3                    _LATB4 007C54                    _LATB5 007C55  
                  _LATB6 007C56                    _LATB7 007C57                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _blink 7FBE  
        __initialization 7F4E             __end_of_main 7FBE                   ??_main 0003  
          __activetblptr 000000                   ?_blink 0001                   _SPBRGH 000FB0  
                 _TRISB4 007C9C                   _TRISB5 007C9D                   _TRISB6 007C9E  
                 _TRISB7 007C9F                   _TRISC6 007CA6                   _TRISC7 007CA7  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7F4E  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_blink 8000  
                ??_blink 0001       __size_of_uart_init 001A       __size_of_uart_send 0016  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F4E  
                __ramtop 0800                  __ptext0 7F84                  __ptext1 7F54  
                __ptext2 7F6A                  __ptext3 7FBE     end_of_initialization 7F4E  
      __end_of_uart_init 7F84        __end_of_uart_send 7F6A      start_initialization 7F4E  
       main@send_message 0005           __size_of_blink 0042                _uart_init 7F6A  
              _uart_send 7F54                 __Hrparam 0000                 __Lrparam 0000  
             ?_uart_init 0001               ?_uart_send 0001            __size_of_main 003A  
               isa$xinst 000000              ??_uart_init 0001              ??_uart_send 0001  
          uart_send@data 0001  
