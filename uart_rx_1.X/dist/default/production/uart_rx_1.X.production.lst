

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 03 19:01:17 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F2550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _RCREG	set	4014
    54  0000                     _SPBRG	set	4015
    55  0000                     _SPBRGH	set	4016
    56  0000                     _RCIF	set	31989
    57  0000                     _LATB4	set	31828
    58  0000                     _TRISB4	set	31900
    59  0000                     _CREN	set	32092
    60  0000                     _GIE	set	32663
    61  0000                     _PEIE	set	32662
    62  0000                     _RCIE	set	31981
    63  0000                     _TRISC7	set	31911
    64  0000                     _TRISC6	set	31910
    65  0000                     _SPEN	set	32095
    66  0000                     _SYNC	set	32100
    67  0000                     _RX9	set	32094
    68  0000                     _BRG16	set	32195
    69  0000                     _BRGH	set	32098
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74  0000D2                     __pcinit:
    75                           	callstack 0
    76  0000D2                     start_initialization:
    77                           	callstack 0
    78  0000D2                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (1 bytes)
    82  0000D2  6A05               	clrf	__pbssCOMRAM& (0+255),c
    83  0000D4                     end_of_initialization:
    84                           	callstack 0
    85  0000D4                     __end_of__initialization:
    86                           	callstack 0
    87  0000D4  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    88  0000D6  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    89  0000D8  0100               	movlb	0
    90  0000DA  EF43  F000         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	bssCOMRAM
    93  000005                     __pbssCOMRAM:
    94                           	callstack 0
    95  000005                     _rec_message:
    96                           	callstack 0
    97  000005                     	ds	1
    98                           
    99                           	psect	cstackCOMRAM
   100  000001                     __pcstackCOMRAM:
   101                           	callstack 0
   102  000001                     ??_blink:
   103  000001                     
   104                           ; 1 bytes @ 0x0
   105  000001                     	ds	2
   106  000003                     ??_main:
   107                           
   108                           ; 1 bytes @ 0x2
   109  000003                     	ds	2
   110                           
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 17 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   130 ;;      Params:         0       0       0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0
   132 ;;      Temps:          2       0       0       0       0       0       0       0       0
   133 ;;      Totals:         2       0       0       0       0       0       0       0       0
   134 ;;Total ram usage:        2 bytes
   135 ;; Hardware stack levels required when called: 2
   136 ;; This function calls:
   137 ;;		_blink
   138 ;;		_uart_rx_init
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  000086                     __ptext0:
   146                           	callstack 0
   147  000086                     _main:
   148                           	callstack 29
   149  000086                     
   150                           ;main.c: 19:     blink();
   151  000086  EC2A  F000         	call	_blink	;wreg free
   152  00008A                     
   153                           ;main.c: 20:     TRISB4 = 0;
   154  00008A  9893               	bcf	3987,4,c	;volatile
   155  00008C                     
   156                           ;main.c: 21:     LATB4 = 0;
   157  00008C  988A               	bcf	3978,4,c	;volatile
   158  00008E                     
   159                           ;main.c: 22:     uart_rx_init();
   160  00008E  EC59  F000         	call	_uart_rx_init	;wreg free
   161  000092                     l774:
   162                           
   163                           ;main.c: 26:     {;main.c: 27:         _delay((unsigned long)((100)*(48000000/4000.0)));
   164  000092  0E07               	movlw	7
   165  000094  6E04               	movwf	(??_main+1)^0,c
   166  000096  0E17               	movlw	23
   167  000098  6E03               	movwf	??_main^0,c
   168  00009A  0E6A               	movlw	106
   169  00009C                     u47:
   170  00009C  2EE8               	decfsz	wreg,f,c
   171  00009E  D7FE               	bra	u47
   172  0000A0  2E03               	decfsz	??_main^0,f,c
   173  0000A2  D7FC               	bra	u47
   174  0000A4  2E04               	decfsz	(??_main+1)^0,f,c
   175  0000A6  D7FA               	bra	u47
   176  0000A8  D000               	nop2	
   177  0000AA  EF49  F000         	goto	l774
   178  0000AE  EF07  F000         	goto	start
   179  0000B2                     __end_of_main:
   180                           	callstack 0
   181                           
   182 ;; *************** function _uart_rx_init *****************
   183 ;; Defined at:
   184 ;;		line 46 in file "./uart_tools.h"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, status,2
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         0       0       0       0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0       0       0       0       0
   201 ;;      Totals:         0       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels used: 1
   204 ;; Hardware stack levels required when called: 1
   205 ;; This function calls:
   206 ;;		Nothing
   207 ;; This function is called by:
   208 ;;		_main
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text1
   213  0000B2                     __ptext1:
   214                           	callstack 0
   215  0000B2                     _uart_rx_init:
   216                           	callstack 29
   217  0000B2                     
   218                           ;./uart_tools.h: 48:     BRGH = 1;
   219  0000B2  84AC               	bsf	4012,2,c	;volatile
   220                           
   221                           ;./uart_tools.h: 49:     BRG16 = 0;
   222  0000B4  96B8               	bcf	4024,3,c	;volatile
   223                           
   224                           ;./uart_tools.h: 50:     RX9 = 0;
   225  0000B6  9CAB               	bcf	4011,6,c	;volatile
   226  0000B8                     
   227                           ;./uart_tools.h: 51:     SPBRGH = 0x01;
   228  0000B8  0E01               	movlw	1
   229  0000BA  6EB0               	movwf	176,c	;volatile
   230                           
   231                           ;./uart_tools.h: 52:     SPBRG = 0x38;
   232  0000BC  0E38               	movlw	56
   233  0000BE  6EAF               	movwf	175,c	;volatile
   234  0000C0                     
   235                           ;./uart_tools.h: 53:     SYNC = 0;
   236  0000C0  98AC               	bcf	4012,4,c	;volatile
   237  0000C2                     
   238                           ;./uart_tools.h: 54:     SPEN = 1;
   239  0000C2  8EAB               	bsf	4011,7,c	;volatile
   240  0000C4                     
   241                           ;./uart_tools.h: 55:     TRISC6 = 1;
   242  0000C4  8C94               	bsf	3988,6,c	;volatile
   243  0000C6                     
   244                           ;./uart_tools.h: 56:     TRISC7 = 1;
   245  0000C6  8E94               	bsf	3988,7,c	;volatile
   246  0000C8                     
   247                           ;./uart_tools.h: 57:     RCIE = 1;
   248  0000C8  8A9D               	bsf	3997,5,c	;volatile
   249  0000CA                     
   250                           ;./uart_tools.h: 58:     PEIE = 1;
   251  0000CA  8CF2               	bsf	4082,6,c	;volatile
   252  0000CC                     
   253                           ;./uart_tools.h: 59:     GIE = 1;
   254  0000CC  8EF2               	bsf	4082,7,c	;volatile
   255  0000CE                     
   256                           ;./uart_tools.h: 60:     CREN = 1;
   257  0000CE  88AB               	bsf	4011,4,c	;volatile
   258  0000D0  0012               	return		;funcret
   259  0000D2                     __end_of_uart_rx_init:
   260                           	callstack 0
   261                           
   262 ;; *************** function _blink *****************
   263 ;; Defined at:
   264 ;;		line 33 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   278 ;;      Params:         0       0       0       0       0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0       0       0       0       0
   281 ;;      Totals:         2       0       0       0       0       0       0       0       0
   282 ;;Total ram usage:        2 bytes
   283 ;; Hardware stack levels used: 1
   284 ;; Hardware stack levels required when called: 1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text2
   293  000054                     __ptext2:
   294                           	callstack 0
   295  000054                     _blink:
   296                           	callstack 29
   297  000054                     
   298                           ;main.c: 36:         LATB4 = 1;
   299  000054  888A               	bsf	3978,4,c	;volatile
   300  000056                     
   301                           ;main.c: 37:         _delay((unsigned long)((1000)*(48000000/4000.0)));
   302  000056  0E3D               	movlw	61
   303  000058  6E02               	movwf	(??_blink+1)^0,c
   304  00005A  0EE1               	movlw	225
   305  00005C  6E01               	movwf	??_blink^0,c
   306  00005E  0E40               	movlw	64
   307  000060                     u57:
   308  000060  2EE8               	decfsz	wreg,f,c
   309  000062  D7FE               	bra	u57
   310  000064  2E01               	decfsz	??_blink^0,f,c
   311  000066  D7FC               	bra	u57
   312  000068  2E02               	decfsz	(??_blink+1)^0,f,c
   313  00006A  D7FA               	bra	u57
   314  00006C                     
   315                           ;main.c: 38:         LATB4 = 0;
   316  00006C  988A               	bcf	3978,4,c	;volatile
   317                           
   318                           ;main.c: 39:         _delay((unsigned long)((1000)*(48000000/4000.0)));
   319  00006E  0E3D               	movlw	61
   320  000070  6E02               	movwf	(??_blink+1)^0,c
   321  000072  0EE1               	movlw	225
   322  000074  6E01               	movwf	??_blink^0,c
   323  000076  0E40               	movlw	64
   324  000078                     u67:
   325  000078  2EE8               	decfsz	wreg,f,c
   326  00007A  D7FE               	bra	u67
   327  00007C  2E01               	decfsz	??_blink^0,f,c
   328  00007E  D7FC               	bra	u67
   329  000080  2E02               	decfsz	(??_blink+1)^0,f,c
   330  000082  D7FA               	bra	u67
   331  000084  0012               	return		;funcret
   332  000086                     __end_of_blink:
   333                           	callstack 0
   334                           
   335 ;; *************** function _ISR *****************
   336 ;; Defined at:
   337 ;;		line 42 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   351 ;;      Params:         0       0       0       0       0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		Interrupt level 2
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	intcode
   365  000008                     __pintcode:
   366                           	callstack 0
   367  000008                     _ISR:
   368                           	callstack 29
   369                           
   370                           ;incstack = 0
   371  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   372  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   373                           
   374                           	psect	intcode_body
   375  000012                     __pintcode_body:
   376                           	callstack 29
   377  000012                     int_func:
   378                           	callstack 29
   379  000012  0006               	pop		; remove dummy address from shadow register refresh
   380  000014                     
   381                           ;main.c: 44:     if(RCIF == 1)
   382  000014  AA9E               	btfss	3998,5,c	;volatile
   383  000016  EF0F  F000         	goto	i2u1_41
   384  00001A  EF11  F000         	goto	i2u1_40
   385  00001E                     i2u1_41:
   386  00001E  EF28  F000         	goto	i2l64
   387  000022                     i2u1_40:
   388  000022                     
   389                           ;main.c: 45:     {;main.c: 46:         rec_message = RCREG;
   390  000022  CFAE F005          	movff	4014,_rec_message	;volatile
   391  000026                     
   392                           ;main.c: 47:         if(rec_message == 0x00)
   393  000026  5005               	movf	_rec_message^0,w,c
   394  000028  A4D8               	btfss	status,2,c
   395  00002A  EF19  F000         	goto	i2u2_41
   396  00002E  EF1B  F000         	goto	i2u2_40
   397  000032                     i2u2_41:
   398  000032  EF1E  F000         	goto	i2l784
   399  000036                     i2u2_40:
   400  000036                     i2l782:
   401                           
   402                           ;main.c: 48:             LATB4 = 0;
   403  000036  988A               	bcf	3978,4,c	;volatile
   404  000038  EF27  F000         	goto	i2l61
   405  00003C                     i2l784:
   406  00003C  0405               	decf	_rec_message^0,w,c
   407  00003E  A4D8               	btfss	status,2,c
   408  000040  EF24  F000         	goto	i2u3_41
   409  000044  EF26  F000         	goto	i2u3_40
   410  000048                     i2u3_41:
   411  000048  EF1B  F000         	goto	i2l782
   412  00004C                     i2u3_40:
   413  00004C                     
   414                           ;main.c: 50:             LATB4 = 1;
   415  00004C  888A               	bsf	3978,4,c	;volatile
   416  00004E                     i2l61:
   417                           
   418                           ;main.c: 53:         RCIF = 0;
   419  00004E  9A9E               	bcf	3998,5,c	;volatile
   420  000050                     i2l64:
   421  000050  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   422  000052  0011               	retfie		f
   423  000054                     __end_of_ISR:
   424                           	callstack 0
   425  0000                     
   426                           	psect	rparam
   427  0000                     
   428                           	psect	temp
   429  000006                     btemp:
   430                           	callstack 0
   431  000006                     	ds	1
   432  0000                     int$flags	set	btemp
   433  0000                     wtemp8	set	btemp+1
   434  0000                     ttemp5	set	btemp+1
   435  0000                     ttemp6	set	btemp+4
   436  0000                     ttemp7	set	btemp+8
   437                           
   438                           	psect	idloc
   439                           
   440                           ;Config register IDLOC0 @ 0x200000
   441                           ;	unspecified, using default values
   442  200000                     	org	2097152
   443  200000  FF                 	db	255
   444                           
   445                           ;Config register IDLOC1 @ 0x200001
   446                           ;	unspecified, using default values
   447  200001                     	org	2097153
   448  200001  FF                 	db	255
   449                           
   450                           ;Config register IDLOC2 @ 0x200002
   451                           ;	unspecified, using default values
   452  200002                     	org	2097154
   453  200002  FF                 	db	255
   454                           
   455                           ;Config register IDLOC3 @ 0x200003
   456                           ;	unspecified, using default values
   457  200003                     	org	2097155
   458  200003  FF                 	db	255
   459                           
   460                           ;Config register IDLOC4 @ 0x200004
   461                           ;	unspecified, using default values
   462  200004                     	org	2097156
   463  200004  FF                 	db	255
   464                           
   465                           ;Config register IDLOC5 @ 0x200005
   466                           ;	unspecified, using default values
   467  200005                     	org	2097157
   468  200005  FF                 	db	255
   469                           
   470                           ;Config register IDLOC6 @ 0x200006
   471                           ;	unspecified, using default values
   472  200006                     	org	2097158
   473  200006  FF                 	db	255
   474                           
   475                           ;Config register IDLOC7 @ 0x200007
   476                           ;	unspecified, using default values
   477  200007                     	org	2097159
   478  200007  FF                 	db	255
   479                           
   480                           	psect	config
   481                           
   482                           ;Config register CONFIG1L @ 0x300000
   483                           ;	PLL Prescaler Selection bits
   484                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
   485                           ;	System Clock Postscaler Selection bits
   486                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   487                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   488                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   489  300000                     	org	3145728
   490  300000  23                 	db	35
   491                           
   492                           ;Config register CONFIG1H @ 0x300001
   493                           ;	Oscillator Selection bits
   494                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   495                           ;	Fail-Safe Clock Monitor Enable bit
   496                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   497                           ;	Internal/External Oscillator Switchover bit
   498                           ;	IESO = OFF, Oscillator Switchover mode disabled
   499  300001                     	org	3145729
   500  300001  0E                 	db	14
   501                           
   502                           ;Config register CONFIG2L @ 0x300002
   503                           ;	Power-up Timer Enable bit
   504                           ;	PWRT = ON, PWRT enabled
   505                           ;	Brown-out Reset Enable bits
   506                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   507                           ;	Brown-out Reset Voltage bits
   508                           ;	BORV = 3, Minimum setting 2.05V
   509                           ;	USB Voltage Regulator Enable bit
   510                           ;	VREGEN = OFF, USB voltage regulator disabled
   511  300002                     	org	3145730
   512  300002  18                 	db	24
   513                           
   514                           ;Config register CONFIG2H @ 0x300003
   515                           ;	Watchdog Timer Enable bit
   516                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   517                           ;	Watchdog Timer Postscale Select bits
   518                           ;	WDTPS = 32768, 1:32768
   519  300003                     	org	3145731
   520  300003  1E                 	db	30
   521                           
   522                           ; Padding undefined space
   523  300004                     	org	3145732
   524  300004  FF                 	db	255
   525                           
   526                           ;Config register CONFIG3H @ 0x300005
   527                           ;	CCP2 MUX bit
   528                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   529                           ;	PORTB A/D Enable bit
   530                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   531                           ;	Low-Power Timer 1 Oscillator Enable bit
   532                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   533                           ;	MCLR Pin Enable bit
   534                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   535  300005                     	org	3145733
   536  300005  01                 	db	1
   537                           
   538                           ;Config register CONFIG4L @ 0x300006
   539                           ;	Stack Full/Underflow Reset Enable bit
   540                           ;	STVREN = ON, Stack full/underflow will cause Reset
   541                           ;	Single-Supply ICSP Enable bit
   542                           ;	LVP = OFF, Single-Supply ICSP disabled
   543                           ;	Extended Instruction Set Enable bit
   544                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   545                           ;	Background Debugger Enable bit
   546                           ;	DEBUG = 0x1, unprogrammed default
   547  300006                     	org	3145734
   548  300006  81                 	db	129
   549                           
   550                           ; Padding undefined space
   551  300007                     	org	3145735
   552  300007  FF                 	db	255
   553                           
   554                           ;Config register CONFIG5L @ 0x300008
   555                           ;	Code Protection bit
   556                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   557                           ;	Code Protection bit
   558                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   559                           ;	Code Protection bit
   560                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   561                           ;	Code Protection bit
   562                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   563  300008                     	org	3145736
   564  300008  0F                 	db	15
   565                           
   566                           ;Config register CONFIG5H @ 0x300009
   567                           ;	Boot Block Code Protection bit
   568                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   569                           ;	Data EEPROM Code Protection bit
   570                           ;	CPD = OFF, Data EEPROM is not code-protected
   571  300009                     	org	3145737
   572  300009  C0                 	db	192
   573                           
   574                           ;Config register CONFIG6L @ 0x30000A
   575                           ;	Write Protection bit
   576                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   577                           ;	Write Protection bit
   578                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   579                           ;	Write Protection bit
   580                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   581                           ;	Write Protection bit
   582                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   583  30000A                     	org	3145738
   584  30000A  0F                 	db	15
   585                           
   586                           ;Config register CONFIG6H @ 0x30000B
   587                           ;	Configuration Register Write Protection bit
   588                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   589                           ;	Boot Block Write Protection bit
   590                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   591                           ;	Data EEPROM Write Protection bit
   592                           ;	WRTD = OFF, Data EEPROM is not write-protected
   593  30000B                     	org	3145739
   594  30000B  E0                 	db	224
   595                           
   596                           ;Config register CONFIG7L @ 0x30000C
   597                           ;	Table Read Protection bit
   598                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   599                           ;	Table Read Protection bit
   600                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   601                           ;	Table Read Protection bit
   602                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   603                           ;	Table Read Protection bit
   604                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   605  30000C                     	org	3145740
   606  30000C  0F                 	db	15
   607                           
   608                           ;Config register CONFIG7H @ 0x30000D
   609                           ;	Boot Block Table Read Protection bit
   610                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   611  30000D                     	org	3145741
   612  30000D  40                 	db	64
   613                           tosu	equ	0xFFF
   614                           tosh	equ	0xFFE
   615                           tosl	equ	0xFFD
   616                           stkptr	equ	0xFFC
   617                           pclatu	equ	0xFFB
   618                           pclath	equ	0xFFA
   619                           pcl	equ	0xFF9
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           prodh	equ	0xFF4
   625                           prodl	equ	0xFF3
   626                           indf0	equ	0xFEF
   627                           postinc0	equ	0xFEE
   628                           postdec0	equ	0xFED
   629                           preinc0	equ	0xFEC
   630                           plusw0	equ	0xFEB
   631                           fsr0h	equ	0xFEA
   632                           fsr0l	equ	0xFE9
   633                           wreg	equ	0xFE8
   634                           indf1	equ	0xFE7
   635                           postinc1	equ	0xFE6
   636                           postdec1	equ	0xFE5
   637                           preinc1	equ	0xFE4
   638                           plusw1	equ	0xFE3
   639                           fsr1h	equ	0xFE2
   640                           fsr1l	equ	0xFE1
   641                           bsr	equ	0xFE0
   642                           indf2	equ	0xFDF
   643                           postinc2	equ	0xFDE
   644                           postdec2	equ	0xFDD
   645                           preinc2	equ	0xFDC
   646                           plusw2	equ	0xFDB
   647                           fsr2h	equ	0xFDA
   648                           fsr2l	equ	0xFD9
   649                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_blink

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMRAM     2     2      0
                              _blink
                       _uart_rx_init
 ---------------------------------------------------------------------------------
 (1) _uart_rx_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
   _uart_rx_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      20        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 03 19:01:17 2022

                     l41 00D0                       l54 0084                       u47 009C  
                     u57 0060                       u67 0078                      l740 00B2  
                    l750 00C6                      l742 00B8                      l760 0054  
                    l752 00C8                      l744 00C0                      l762 0056  
                    l754 00CA                      l746 00C2                      l770 008C  
                    l764 006C                      l756 00CC                      l748 00C4  
                    l772 008E                      l758 00CE                      l774 0092  
                    l766 0086                      l768 008A                      _GIE 007F97  
                    _ISR 0008                      _RX9 007D5E                      wreg 000FE8  
                   ?_ISR 0001                     _BRGH 007D62                     _CREN 007D5C  
                   _PEIE 007F96                     _RCIE 007CED                     _RCIF 007CF5  
                   i2l61 004E                     i2l64 0050                     _SPEN 007D5F  
                   _SYNC 007D64                     _main 0086                     btemp 0006  
                   start 000E             ___param_bank 000000                    ??_ISR 0001  
                  ?_main 0001                    _BRG16 007DC3                    _LATB4 007C54  
                  i2l780 0026                    i2l782 0036                    i2l784 003C  
                  i2l776 0014                    i2l786 004C                    i2l778 0022  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _blink 0054  
                  ttemp5 0007                    ttemp6 000A                    ttemp7 000E  
                  status 000FD8                    wtemp8 0007          __initialization 00D2  
           __end_of_main 00B2                   ??_main 0003            __activetblptr 000000  
                 ?_blink 0001                   _SPBRGH 000FB0                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 0036                   i2u2_41 0032  
                 i2u3_40 004C                   i2u3_41 0048                   _TRISB4 007C9C  
                 _TRISC6 007CA6                   _TRISC7 007CA7                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 00D4            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_blink 0086                  ??_blink 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00D2  
                __ramtop 0800                  __ptext0 0086                  __ptext1 00B2  
                __ptext2 0054             __size_of_ISR 004C           __pintcode_body 0012  
   end_of_initialization 00D4                  int_func 0012            ?_uart_rx_init 0001  
         ??_uart_rx_init 0001      start_initialization 00D2              __end_of_ISR 0054  
            __pbssCOMRAM 0005                __pintcode 0008     __end_of_uart_rx_init 00D2  
         __size_of_blink 0032                 __Hrparam 0000                 __Lrparam 0000  
            _rec_message 0005            __size_of_main 002C                 isa$xinst 000000  
               int$flags 0006    __size_of_uart_rx_init 0020                 intlevel2 0000  
           _uart_rx_init 00B2  
